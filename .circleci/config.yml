---
version: 2.1

jobs:
  build:
    docker:
      - image: debian:9
        environment:
          PGDATABASE: app_testing
          PGHOST: localhost
          PGUSER: circleci
          PIPENV_VENV_IN_PROJECT: true
      - image: circleci/postgres:9.6
        environment:
          POSTGRES_DB: app_testing
          POSTGRES_USER: circleci
    steps:
      - run:
          name: Installing system dependencies
          command: |
            apt update
            apt install -y curl gnupg
            curl -L https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
            echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
            apt update
            apt install -y \
              autoconf \
              bison \
              build-essential \
              gettext \
              git \
              google-chrome-stable \
              libcurl4-openssl-dev \
              libedit-dev \
              libicu-dev \
              libjpeg-dev \
              libonig-dev \
              libpng-dev \
              libpq-dev \
              libreadline-dev \
              libssl-dev \
              libxml2-dev \
              libzip-dev \
              openssl \
              pkg-config \
              postgresql-client-9.6 \
              postgresql-client-common \
              zlib1g-dev \
              libffi-dev
      - run:
          name: Setting up PATH variable
          command: echo "export PATH=~/.asdf/shims:~/.asdf/bin:$PATH" >> $BASH_ENV
      - run:
          name: Installing asdf
          command: |
            git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.7.5
            asdf plugin-add nodejs
            asdf plugin-add php
            asdf plugin-add python
            ~/.asdf/plugins/nodejs/bin/import-release-team-keyring
      - checkout
      - restore_cache:
          keys:
            - v4-asdf-installs-{{ checksum ".tool-versions" }}
            - v4-asdf-installs-
      - run:
          name: Installing tools
          command: |
            PHP_CONFIGURE_OPTIONS="--with-pdo-pgsql --with-openssl --with-curl --with-zlib --with-readline --with-gettext --with-jpeg-dir=/usr/lib/x86_64-linux-gnu/libjpeg.so.62 --with-png-dir=/usr/lib/x86_64-linux-gnu/libpng.so" asdf install
            # Node.js
            asdf reshim nodejs
            # PHP
            pecl install pcov || true
            cp .circleci/php.ini ~/.asdf/installs/php/$(asdf current php | awk '{print $1}')/php.ini
            asdf reshim php
      - save_cache:
          key: v4-asdf-installs-{{ checksum ".tool-versions" }}
          paths:
            - ~/.asdf/installs
      - restore_cache:
          keys:
            - v1-npm-{{ checksum "package-lock.json" }}
            - v1-npm-
      - run:
          name: Installing Node.js dependencies
          command: npm install
      - save_cache:
          key: v1-npm-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - restore_cache:
          keys:
            - v1-composer-{{ checksum "composer.lock" }}
            - v1-composer-
      - run:
          name: Installing PHP dependencies
          command: |
            cp .env.testing .env
            composer install
      - save_cache:
          key: v1-composer-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run:
          name: Running database migrations
          command: |
            psql < database/20180406_initial_db.sql
            php artisan migrate
      - run:
          name: Compiling assets
          command: npm run dev
      - run:
          name: Running unit tests
          command: |
            composer exec pcov -- clobber
            composer test -- --coverage-clover=coverage.xml
      - run:
          name: Starting chrome driver
          command: |
            chmod +x ./vendor/laravel/dusk/bin/chromedriver-linux
            ./vendor/laravel/dusk/bin/chromedriver-linux
          background: true
      - run:
          name: Starting server
          command: php artisan serve
          background: true
      - run:
          name: Running acceptance tests
          command: |
            composer test -- --filter=HelpersTest
            php artisan dusk --testdox
